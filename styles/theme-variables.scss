$accent-color: #009FE3;
$black: #3a3a3a;
$light-gray: #F2F2F2;

@mixin text {
    font-weight: 400;
    font-size: 1rem;
    @include breakpoint(md, max) {
        font-size: 0.9rem;
    }
}

@mixin sub-title {
    font-weight: 500;
    font-size: 1.3rem;
    @include breakpoint(md, max) {
        font-size: 1.1rem;
    }
}

@mixin big-title {
    font-weight: 800;
    font-size: 3.6rem;

    @include breakpoint(md, max) {
        font-size: 2.5rem;
    }
}

@mixin title {
    font-size: 2.4rem;
    font-weight: 700;
    @include breakpoint(md, max) {
        font-size: 2rem;
    }
}

// https://adrianmanduc.medium.com/how-to-create-a-scss-mixin-for-responsive-design-8aad4f70f1d5
$breakpoints: (
    sm: (
        min: 576px,
        max: 575.98px,
    ),
    md: (
        min: 768px,
        max: 767.98px
    ),
    lg: (
        min: 992px,
        max: 991.98px
    ),
    xl: (
        min: 1200px,
        max: 1199.98px
    ),
    xxl: (
      min: 1400px,
      max: 1399.98px,
    )
);

@mixin breakpoint($breakpoint, $direction: min) {
    
    //check if the supplied breakpoint exists in our breakpoits map
    @if map-has-key($breakpoints, $breakpoint) { 
        $breakpoint-values: map-get($breakpoints, $breakpoint);
        $breakpoint-min: map-get($breakpoint-values, min);
        $breakpoint-max: map-get($breakpoint-values, max);

        //check if we are writing styles for larger or smaller screens
        @if $direction == min {
            @media (min-width: $breakpoint-min) {
                @content;
            }
        }

        @else {
            @media (max-width: $breakpoint-max) {
                @content;
            }
        }
    
    // use the custom value if the breakpoint is not part of the pre-defined list
    } @else {
        
        @if $direction == min {
            @media (min-width: $breakpoint) {
                @content;
            }
        }

        @else {
            @media (max-width: $breakpoint) {
                @content;
            }
        }
    }
}